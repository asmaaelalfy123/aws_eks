name: Node js app deploy to EKS
on:
  push:
    branches: [ "master" ]

  deployment_status:
    types: [success, failure]
  # pull_request:
  #   branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is latest stable
      id: install
      
  
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - uses: sonarsource/sonarqube-scan-action@master
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: demo
        IMAGE_TAG: latest
      run: |
      
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name demo
    
    - name: Deploy to EKS
      run: |
        kubectl apply -Rf k8s
        
    # - name: Send Slack notification
    #   uses: 8398a7/action-slack@v3.1.0
    #   with:
    #       status: ${{ github.event.deployment_status.state }}
    #       text: "Deployment of ${{ github.event.deployment.environment }} ${{ github.event.deployment_status.state }} for branch ${{ github.event.deployment.ref }} in repository ${{ github.repository }}."
    #       color_good: '#2eb886'
    #       color_warning: '#d9b52e'
    #       color_danger: '#d11f1f'
    #   env:
    #       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
